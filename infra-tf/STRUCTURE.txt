Coherent PMO Platform - Infrastructure Structure
================================================

infra-tf/
│
├── Root Module Files
│   ├── main.tf                      # Orchestrates all modules
│   ├── variables.tf                 # Root module variables
│   ├── outputs.tf                   # Root module outputs
│   ├── terraform.tfvars.example     # Example configuration
│   └── user-data.sh                 # EC2 bootstrap script
│
├── Modules
│   ├── vpc/                         # VPC Module
│   │   ├── main.tf                  # VPC, subnets, security groups, NAT, IGW
│   │   ├── variables.tf             # Module inputs
│   │   └── outputs.tf               # Module outputs
│   │
│   ├── rds/                         # RDS Module
│   │   ├── main.tf                  # PostgreSQL database
│   │   ├── variables.tf             # Module inputs
│   │   └── outputs.tf               # Module outputs
│   │
│   ├── ec2/                         # EC2 Module
│   │   ├── main.tf                  # Application server, IAM, Elastic IP
│   │   ├── variables.tf             # Module inputs
│   │   └── outputs.tf               # Module outputs
│   │
│   └── s3/                          # S3 Module
│       ├── main.tf                  # Artifact storage bucket
│       ├── variables.tf             # Module inputs
│       └── outputs.tf               # Module outputs
│
├── Documentation
│   ├── README.md                    # Quick start guide
│   ├── MODULES.md                   # Module structure documentation
│   ├── DEPLOYMENT.md                # Complete deployment guide (DNS, SSL)
│   ├── ARCHITECTURE.md              # Architecture documentation
│   ├── DNS-SETUP.md                 # DNS configuration guide
│   └── STRUCTURE.txt                # This file
│
├── Automation Scripts
│   ├── quick-deploy.sh              # Automated deployment
│   └── .gitignore                   # Git ignore patterns
│
└── Backup Files (not in git)
    ├── main.tf.backup               # Original monolithic main.tf
    ├── variables.tf.backup          # Original variables
    └── outputs.tf.backup            # Original outputs

Module Dependency Flow:
=======================

1. module.vpc
   └── Creates: VPC, Subnets, Security Groups, NAT, IGW
   
2. module.s3
   └── Creates: S3 bucket (independent)
   
3. module.rds
   └── Uses: vpc.private_subnet_ids, vpc.db_sg_id
   └── Creates: RDS PostgreSQL
   
4. module.ec2
   └── Uses: vpc.public_subnet_ids, vpc.app_sg_id
   └── Uses: s3.bucket_arn, s3.bucket_name
   └── Uses: rds.db_address, rds.db_port
   └── Creates: EC2 instance, IAM role, Elastic IP

Total Files: 23 files
- Terraform files: 16 (.tf)
- Documentation: 5 (.md)
- Scripts: 2 (.sh, .gitignore)

Benefits of Modular Structure:
================================
✓ Reusability across environments
✓ Independent module testing
✓ Clear separation of concerns
✓ Easier maintenance
✓ Better collaboration
✓ Version control per module
