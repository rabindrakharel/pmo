{
  "permissions": {
    "allow": [
      "Bash(curl -s -X POST http://localhost:4000/api/v1/auth/login -H \"Content-Type: application/json\" -d '{\"\"\"\"email\"\"\"\":\"\"\"\"james.miller@huronhome.ca\"\"\"\",\"\"\"\"password\"\"\"\":\"\"\"\"password123\"\"\"\"}')",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT stage_id, stage_name, color_code FROM app.setting_datalabel_opportunity_funnel_stage ORDER BY sort_order;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT id, name, project_stage FROM app.d_project LIMIT 5;\")",
      "Bash(curl -s http://localhost:5173)",
      "Bash(curl -s http://localhost:4000/api/v1/setting?category=project_stage)",
      "Bash(./tools/db-import.sh)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\d app.setting_datalabel_project_stage\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT level_id, level_name, sort_order, parent_id FROM app.setting_datalabel_project_stage ORDER BY sort_order LIMIT 5;\")",
      "Bash(chmod +x /home/rabin/projects/pmo/tools/run_query.sh)",
      "Bash(./tools/run_query.sh \"SELECT level_id, level_name, sort_order FROM app.setting_datalabel_project_stage ORDER BY sort_order LIMIT 5;\")",
      "Bash(./tools/run_query.sh \"\\d app.setting_datalabel_task_stage\")",
      "Bash(./tools/run_query.sh \"\\d app.setting_datalabel_opportunity_funnel_stage\")",
      "Bash(./tools/run_query.sh \"SELECT level_id, level_name, sort_order FROM app.setting_datalabel_task_stage ORDER BY sort_order;\")",
      "Bash(./tools/logs-api.sh 50)",
      "Bash(./tools/restart-api.sh)",
      "Bash(curl -s http://localhost:4000/api/v1/setting?category=task_stage)",
      "Bash(curl -s http://localhost:4000/api/v1/setting?category=opportunity_funnel_stage)",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=project_stage)",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=task_stage)",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=opportunity_funnel_stage)",
      "Bash(curl -s http://localhost:5173/task/f1111111-1111-1111-1111-111111111111)",
      "Bash(curl -s http://localhost:5173/employee/59c0e4ca-a2d0-4c96-963e-dde1396ceea2)",
      "Bash(./tools/test-api.sh GET /api/v1/employee/59c0e4ca-a2d0-4c96-963e-dde1396ceea2)",
      "Bash(./tools/logs-web.sh 50)",
      "Bash(./tools/logs-api.sh 100)",
      "Bash(./tools/test-api.sh GET /api/v1/entity/child-tabs/employee/59c0e4ca-a2d0-4c96-963e-dde1396ceea2)",
      "Bash(./tools/logs-api.sh 20)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\d app.setting_datalabel_client_service\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT level_id, level_name, slug, sort_order, active_flag FROM app.setting_datalabel_client_service ORDER BY sort_order LIMIT 10;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT COUNT(*) as total_services FROM app.setting_datalabel_client_service;\")",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=client_service)",
      "Bash(./tools/test-api.sh:*)",
      "Bash(kill:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(pnpm --filter web add:*)",
      "Bash(curl:*)",
      "Bash(pnpm add:*)",
      "Bash(./tools/start-all.sh:*)",
      "Bash(./tools/logs-api.sh:*)",
      "Bash(lsof:*)",
      "Bash(./tools/logs-web.sh:*)",
      "Bash(./tools/run_query.sh:*)",
      "Bash(mv:*)",
      "Read(//home/rabin/.ssh/**)",
      "Bash(openssl rand:*)",
      "Bash(aws sts get-caller-identity:*)",
      "Bash(terraform init:*)",
      "Bash(terraform plan:*)",
      "Bash(tee:*)",
      "Bash(terraform apply:*)",
      "Bash(pkill:*)",
      "Bash(terraform state list:*)",
      "Bash(terraform destroy:*)",
      "Bash(aws rds describe-db-engine-versions:*)",
      "Bash(terraform output:*)",
      "Bash(terraform state show:*)",
      "Bash(terraform refresh)",
      "Bash(chmod:*)",
      "Bash(aws events put-rule:*)",
      "Bash(aws:*)",
      "Read(//home/rabin/.aws/**)",
      "Bash(./infra-tf/deploy-code.sh:*)",
      "Bash(ssh:*)",
      "Bash(pnpm build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(dig:*)",
      "Bash(terraform show:*)",
      "Bash(npx tsc:*)",
      "Bash(PGPASSWORD=app psql:*)",
      "Bash(pgrep:*)",
      "Bash(./tools/db-import.sh:*)",
      "Bash(for category in customer_tier business_level office_level position_level)",
      "Bash(do echo \"=== $category ===\")",
      "Bash(done)",
      "Bash(for category in business_level office_level)",
      "Bash(./tools/test-artifact-s3.sh:*)",
      "Bash(export AWS_PROFILE=cohuron)",
      "Bash(/home/rabin/projects/pmo/tools/test-artifact-s3.sh:*)",
      "Bash(/home/rabin/projects/pmo/tools/logs-api.sh:*)",
      "Bash(find:*)",
      "Bash(for file in /home/rabin/projects/pmo/db/setting_datalabel__*.ddl)",
      "Bash(do echo \"Updating $file\")",
      "Bash(for category in task_priority task_stage project_stage customer_tier business_level office_level)",
      "Bash(do echo \"=== Testing $category ===\")",
      "Bash(pnpm typecheck:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4MjYwYjFiMC01ZWZjLTQ2MTEtYWQzMy1lZTc2YzBjZjdmMTMiLCJlbWFpbCI6ImphbWVzLm1pbGxlckBodXJvbmhvbWUuY2EiLCJuYW1lIjoiSmFtZXMgTWlsbGVyIiwiaWF0IjoxNzYxMjM5MTY4LCJleHAiOjE3NjEzMjU1Njh9.si_N1i67eqTurRB91IRHtFToLfOSphocg6dsGHGBjrc\")",
      "Bash(git checkout:*)",
      "Bash(if [ -f /home/rabin/projects/pmo/docs/artifacts.md ])",
      "Bash(then)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4MjYwYjFiMC01ZWZjLTQ2MTEtYWQzMy1lZTc2YzBjZjdmMTMiLCJlbWFpbCI6ImphbWVzLm1pbGxlckBodXJvbmhvbWUuY2EiLCJuYW1lIjoiSmFtZXMgTWlsbGVyIiwiaWF0IjoxNzYxMzIyNTA5LCJleHAiOjE3NjE0MDg5MDl9.42l6JuVnFQ4XjKXnX9yVJWTKppT5YMyZMbFMe5VQr4Q\")",
      "Bash(/tmp/create-wiki.sh)",
      "Bash(python3:*)",
      "Read(//home/rabin/Screenshots/**)",
      "Bash(pnpm --filter web typecheck:*)",
      "Bash(timeout 3 ./tools/logs-api.sh:*)",
      "Bash(timeout 3 ./tools/logs-web.sh:*)",
      "Bash(bash:*)",
      "Bash(timeout 2 ./tools/logs-api.sh:*)",
      "Bash(timeout 3 tail:*)",
      "Bash(timeout 2 tail:*)",
      "Bash(timeout 5 ./tools/test-api.sh:*)",
      "Bash(rsync:*)",
      "Bash(ssh-keygen:*)",
      "Bash(./scripts/verify-dns.sh:*)",
      "Bash(timeout 2 ./tools/logs-web.sh:*)",
      "Read(///**)",
      "Bash(timeout 30 npx tsc:*)",
      "Bash(echo:*)",
      "Bash(for file in 19_d_task.ddl 21_d_artifact.ddl 23_d_form_head.ddl 25_d_wiki.ddl 27_d_reports.ddl 35_d_email_template.ddl 37_d_revenue.ddl 15_d_role.ddl 16_d_position.ddl 17_d_worksite.ddl 11_d_employee.ddl 12_d_office.ddl 13_d_business.ddl)",
      "Bash(do python3 /tmp/refactor_ddl.py \"$file\")",
      "Bash(for file in 11_d_employee.ddl 12_d_office.ddl 13_d_business.ddl 15_d_role.ddl 16_d_position.ddl 17_d_worksite.ddl 19_d_task.ddl 21_d_artifact.ddl 23_d_form_head.ddl 25_d_wiki.ddl 27_d_reports.ddl 35_d_email_template.ddl 37_d_revenue.ddl)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(for file in 16_d_position.ddl 17_d_worksite.ddl 19_d_task.ddl 21_d_artifact.ddl 36_d_cost.ddl 37_d_revenue.ddl)",
      "Bash(do echo \"=== Testing $file ===\" PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -f /home/rabin/projects/pmo/db/$file)",
      "Bash(do echo \"=== Testing $file ===\")",
      "Bash(timeout 30 pnpm:*)",
      "Bash(timeout 5 pnpm:*)",
      "Bash(node /tmp/test-strict-detection.js:*)",
      "Bash(for table in office_level business_level project_stage task_stage cust_level customer_tier position_level opportunity_funnel_stage industry_sector acquisition_channel cust_status cust_service task_priority task_update_type form_submission_status form_approval_status wiki_publication_status)",
      "Bash(do echo \"=== $table ===\" PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -t -c \"\\d app.setting_datalabel_$table\")",
      "Bash(timeout 5 tail:*)",
      "Bash(for file in /home/rabin/projects/pmo/docs/*.md)",
      "Bash(do if [ \"$file\" != \"/home/rabin/projects/pmo/docs/instructionToLLM.md\" ])",
      "Bash([ \"$file\" != \"/home/rabin/projects/pmo/docs/settings.md\" ])"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/tmp"
    ]
  }
}
