{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(./tools/start-all.sh:*)",
      "Bash(make:*)",
      "Bash(sudo lsof:*)",
      "Bash(./tools/start-api.sh:*)",
      "Bash(npm install:*)",
      "Bash(pnpm install:*)",
      "Bash(curl:*)",
      "Bash(./tools/start-web.sh:*)",
      "Bash(./tools/logs-web.sh:*)",
      "Bash(./tools/restart-web.sh:*)",
      "Bash(kill:*)",
      "Bash(./tools/status.sh:*)",
      "Bash(npm ls:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm run:*)",
      "Bash(./db/drop_and_recreate.sh:*)",
      "Bash(grep:*)",
      "Bash(psql:*)",
      "Bash(pnpm build:*)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\dt app.d_*\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\dt app.m_*\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT tablename FROM pg_tables WHERE schemaname = ''app'' AND tablename LIKE ''meta%'' OR tablename LIKE ''m_%'' ORDER BY tablename;\")",
      "Bash(./manage.sh:*)",
      "Bash(./generate_schema.sh:*)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\dt app.*\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"DROP SCHEMA app CASCADE; CREATE SCHEMA app;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -f /home/rabin/projects/pmo/db/schema.sql)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT COUNT(*) as user_permissions FROM app.rel_user_scope; SELECT COUNT(*) as role_permissions FROM app.rel_role_scope; SELECT COUNT(*) as employees FROM app.d_emp;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\d app.rel_user_scope\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT r.name, rrs.scope_type, rrs.scope_name, rrs.scope_permission FROM app.rel_role_scope rrs JOIN app.d_role r ON r.id = rrs.role_id WHERE rrs.active = true ORDER BY r.name;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT name, level_id, parent_id FROM app.d_scope_business ORDER BY level_id, name;\")",
      "Bash(PGPASSWORD=app psql:*)",
      "Bash(pnpm start:*)",
      "Bash(DATABASE_URL=postgresql://app:app@localhost:5434/app REDIS_URL=redis://localhost:6379/0 JWT_SECRET=dev-jwt-secret-key DEV_BYPASS_OIDC=true NODE_ENV=development pnpm start)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(./tools/db-recreate.sh:*)",
      "Bash(./tools/restart-api.sh:*)",
      "Bash(node:*)",
      "Bash(./tools/logs-api.sh:*)",
      "Bash(DATABASE_URL=postgresql://app:app@localhost:5434/app REDIS_URL=redis://localhost:6379/0 JWT_SECRET=dev-jwt-secret-key DEV_BYPASS_OIDC=false NODE_ENV=development pnpm start)",
      "Bash(DATABASE_URL=postgresql://app:app@localhost:5434/app REDIS_URL=redis://localhost:6379/0 JWT_SECRET=production-jwt-secret-key-change-in-production DEV_BYPASS_OIDC=false NODE_ENV=development pnpm start)",
      "Bash(timeout 30s pnpm run build)",
      "Bash(pnpm dev:*)",
      "Bash(DATABASE_URL=postgresql://app:app@localhost:5434/app REDIS_URL=redis://localhost:6379/0 JWT_SECRET=dev-jwt-secret-key DEV_BYPASS_OIDC=true NODE_ENV=development pnpm dev)",
      "Bash(./tools/db-import.sh:*)",
      "Bash(timeout:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(cat:*)",
      "Bash(/dev/null)",
      "Bash(./tools/db-drop.sh:*)",
      "Bash(npx tsc:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/tmp"
    ]
  }
}