{
  "permissions": {
    "allow": [
      "Bash(curl -s -X POST http://localhost:4000/api/v1/auth/login -H \"Content-Type: application/json\" -d '{\"\"\"\"email\"\"\"\":\"\"\"\"james.miller@huronhome.ca\"\"\"\",\"\"\"\"password\"\"\"\":\"\"\"\"password123\"\"\"\"}')",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT stage_id, stage_name, color_code FROM app.setting_datalabel_opportunity_funnel_stage ORDER BY sort_order;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT id, name, project_stage FROM app.d_project LIMIT 5;\")",
      "Bash(curl -s http://localhost:5173)",
      "Bash(curl -s http://localhost:4000/api/v1/setting?category=project_stage)",
      "Bash(./tools/db-import.sh)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\d app.setting_datalabel_project_stage\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT level_id, level_name, sort_order, parent_id FROM app.setting_datalabel_project_stage ORDER BY sort_order LIMIT 5;\")",
      "Bash(chmod +x /home/rabin/projects/pmo/tools/run_query.sh)",
      "Bash(./tools/run_query.sh \"SELECT level_id, level_name, sort_order FROM app.setting_datalabel_project_stage ORDER BY sort_order LIMIT 5;\")",
      "Bash(./tools/run_query.sh \"\\d app.setting_datalabel_task_stage\")",
      "Bash(./tools/run_query.sh \"\\d app.setting_datalabel_opportunity_funnel_stage\")",
      "Bash(./tools/run_query.sh \"SELECT level_id, level_name, sort_order FROM app.setting_datalabel_task_stage ORDER BY sort_order;\")",
      "Bash(./tools/logs-api.sh 50)",
      "Bash(./tools/restart-api.sh)",
      "Bash(curl -s http://localhost:4000/api/v1/setting?category=task_stage)",
      "Bash(curl -s http://localhost:4000/api/v1/setting?category=opportunity_funnel_stage)",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=project_stage)",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=task_stage)",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=opportunity_funnel_stage)",
      "Bash(curl -s http://localhost:5173/task/f1111111-1111-1111-1111-111111111111)",
      "Bash(curl -s http://localhost:5173/employee/59c0e4ca-a2d0-4c96-963e-dde1396ceea2)",
      "Bash(./tools/test-api.sh GET /api/v1/employee/59c0e4ca-a2d0-4c96-963e-dde1396ceea2)",
      "Bash(./tools/logs-web.sh 50)",
      "Bash(./tools/logs-api.sh 100)",
      "Bash(./tools/test-api.sh GET /api/v1/entity/child-tabs/employee/59c0e4ca-a2d0-4c96-963e-dde1396ceea2)",
      "Bash(./tools/logs-api.sh 20)",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"\\d app.setting_datalabel_client_service\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT level_id, level_name, slug, sort_order, active_flag FROM app.setting_datalabel_client_service ORDER BY sort_order LIMIT 10;\")",
      "Bash(PGPASSWORD=app psql -h localhost -p 5434 -U app -d app -c \"SELECT COUNT(*) as total_services FROM app.setting_datalabel_client_service;\")",
      "Bash(./tools/test-api.sh GET /api/v1/setting?category=client_service)",
      "Bash(./tools/test-api.sh:*)",
      "Bash(kill:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(pnpm --filter web add:*)",
      "Bash(curl:*)",
      "Bash(pnpm add:*)",
      "Bash(./tools/start-all.sh:*)",
      "Bash(./tools/logs-api.sh:*)",
      "Bash(lsof:*)",
      "Bash(./tools/logs-web.sh:*)",
      "Bash(./tools/run_query.sh:*)",
      "Bash(mv:*)",
      "Read(//home/rabin/.ssh/**)",
      "Bash(openssl rand:*)",
      "Bash(aws sts get-caller-identity:*)",
      "Bash(terraform init:*)",
      "Bash(terraform plan:*)",
      "Bash(tee:*)",
      "Bash(terraform apply:*)",
      "Bash(pkill:*)",
      "Bash(terraform state list:*)",
      "Bash(terraform destroy:*)",
      "Bash(aws rds describe-db-engine-versions:*)",
      "Bash(terraform output:*)",
      "Bash(terraform state show:*)",
      "Bash(terraform refresh)",
      "Bash(chmod:*)",
      "Bash(aws events put-rule:*)",
      "Bash(aws:*)",
      "Read(//home/rabin/.aws/**)",
      "Bash(./infra-tf/deploy-code.sh:*)",
      "Bash(ssh:*)",
      "Bash(pnpm build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(dig:*)",
      "Bash(terraform show:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/tmp"
    ]
  }
}
